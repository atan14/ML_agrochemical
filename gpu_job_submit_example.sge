#$ -S /bin/bash        # Set shell to run job
#$ -q all.q            # Choose queue to run job in 
#$ -cwd
#$ -pe cuda 1          # Request one processor from the CUDA parallel env.
#$ -l slots_gpu=1      # Request one GPU per CPU requested
#$ -N ecfp_simplenn5_dataset2    # specify the job name

conda activate tensorflow-1.4
module load cuda/cuda-8.0    # Depending on Tensorflow or your package requirements, you may need to use specific cuda version (7.0, 7.5, 8.0 installed)
export CUDA_HOME=/usr/local/cuda-8.0/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-8.0/lib64
export CUDA_VISIBLE_DEVICES=`cat $TMPDIR/cuda_device`

cd /home/atan14/ml_agro2/
#mpirun -np 1 python 4_ecfp.py dataset2.pkl simplenn --save_model True --filename_append 3layers --layer_dim 3 > logfile/simplenn_dataset2_3layers.log

#mpirun -np 1 python 4_ecfp.py dataset2.pkl simplenn --save_model True --filename_append 4layers --layer_dim 4 > logfile/simplenn_dataset2_4layers.log

mpirun -np 1 python 4_ecfp.py dataset2.pkl simplenn --save_model True --filename_append 5layers --layer_dim 5 > logfile/simplenn_dataset2_5layers.log


#mpirun -np 1 python 4_ecfp.py dataset2.pkl  randomforest --model_param 200 1 --save_model True --filename_append 200estimators_1depth > logfile/randomforest_dataset2_200estimators_1depth.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  randomforest --model_param 500 1 --save_model True --filename_append 500estimators_1depth > logfile/randomforest_dataset2_500estimators_1depth.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  randomforest --model_param 200 2 --save_model True --filename_append 200estimators_2depth > logfile/randomforest_dataset2_200estimators_2depth.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  randomforest --model_param 500 2 --save_model True --filename_append 500estimators_2depth > logfile/randomforest_dataset2_500estimators_2depth.log

#mpirun -np 1 python 4_ecfp.py dataset2.pkl  gradientboosting --model_param 200 1.0 1 --save_model True --filename_append 200estimators_1depth_lr1.0 > logfile/gradientboosting_dataset2_200estimators_1depth_lr1.0.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  gradientboosting --model_param 500 1.0 1 --save_model True --filename_append 500estimators_1depth_lr1.0 > logfile/gradientboosting_dataset2_500estimators_1depth_lr1.0.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  gradientboosting --model_param 200 1.0 2 --save_model True --filename_append 200estimators_2depth_lr1.0 > logfile/gradientboosting_dataset2_200estimators_2depth_lr1.0.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  gradientboosting --model_param 500 1.0 2 --save_model True --filename_append 500estimators_2depth_lr1.0 > logfile/gradientboosting_dataset2_500estimators_2depth_lr1.0.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  gradientboosting --model_param 200 0.5 1 --save_model True --filename_append 200estimators_1depth_lr0.5 > logfile/gradientboosting_dataset2_200estimators_1depth_lr0.5.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  gradientboosting --model_param 500 0.5 1 --save_model True --filename_append 500estimators_1depth_lr0.5 > logfile/gradientboosting_dataset2_500estimators_1depth_lr0.5.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  gradientboosting --model_param 200 0.5 2 --save_model True --filename_append 200estimators_2depth_lr0.5 > logfile/gradientboosting_dataset2_200estimators_2depth_lr0.5.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  gradientboosting --model_param 500 0.5 2 --save_model True --filename_append 500estimators_2depth_lr0.5 > logfile/gradientboosting_dataset2_500estimators_2depth_lr0.5.log

#mpirun -np 1 python 4_ecfp.py dataset2.pkl  knearest --model_param 3 distance brute --save_model True --filename_append 3nn_distance_brute > logfile/knearest_dataset2_3nn_distance_brute.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  knearest --model_param 5 distance brute --save_model True --filename_append 5nn_distance_brute > logfile/knearest_dataset2_5nn_distance_brute.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  knearest --model_param 3 uniform brute --save_model True --filename_append 3nn_uniform_brute > logfile/knearest_dataset2_3nn_uniform_brute.log
#mpirun -np 1 python 4_ecfp.py dataset2.pkl  knearest --model_param 5 uniform brute --save_model True --filename_append 5nn_uniform_brute > logfile/knearest_dataset2_5nn_uniform_brute.log
